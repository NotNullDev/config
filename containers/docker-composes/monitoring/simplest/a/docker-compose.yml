services:
  promtail:
    build:
      context: ./promtail
    container_name: promtail
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/hostname:/etc/hostname:ro
    entrypoint: [ "/bin/sh", "/entrypoint.sh" ]
    env_file:
      - .env
    networks:
      - monitoring

  prometheus:
    build:
      context: ./prometheus
    container_name: prometheus
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/hostname:/etc/hostname:ro
    entrypoint: [ "/bin/sh", "/entrypoint.sh" ]
    env_file:
      - .env
    networks:
      - monitoring
    depends_on:
      - cadvisor

  node-exporter:
    image: prom/node-exporter:latest
    container_name: monitoring_node_exporter
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - monitoring

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: monitoring_cadvisor
    restart: unless-stopped
    volumes:
      - /dev/disk/:/dev/disk:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /sys:/sys:ro
      - /var/run:/var/run:ro
      - /:/rootfs:ro
    privileged: true
    devices:
      - "/dev/kmsg:/dev/kmsg"
    expose:
      - 8080
    networks:
      - monitoring

  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: monitoring_grafana
  #   restart: unless-stopped
  #   ports:
  #     - "5000:3000"
  #   networks:
  #     - monitoring
  #   volumes:
  #     - grafana:/var/lib/grafana
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=MYPASSWORT
  #     - GF_USERS_ALLOW_SIGN_UP=false
  #     - GF_SERVER_DOMAIN=myrul.com
  #     - GF_SMTP_ENABLED=true
  #     - GF_SMTP_HOST=smtp.gmail.com:587
  #     - GF_SMTP_USER=myadrress@gmail.com
  #     - GF_SMTP_PASSWORD=mypassword
  #     - GF_SMTP_FROM_ADDRESS=myaddress@gmail.com


networks:
  monitoring:
    name: monitoring

# volumes:
#   grafana:
#     name: grafana
#   agent:
#     image: grafana/agent:v0.29.0
#     volumes:
#       - grafana-agent:/etc/agent/data
#       - /var/run/docker.sock:/var/run/docker.sock:ro
#       - ./agent.yml:/etc/agent/agent.yaml

# volumes:
#   grafana-agent:
#     name: grafana-agent